package FileAndIO.递归;

/**
 * 递归：方法自己调用自己
 * -递归的分类
 *  -递归分为两种，直接递归和间接递归。
 *  -直接递归称为方法自己调用自己
 *  -间接递归可以A方法调用B方法，B方法调用C方法，C方法调用A方法。
 * -注意事项：
 *  -递归一定要有条件限定，保证递归能够停止下来，否则会发生栈内存溢出。
 *  -在递归中虽然有限定条件，但是递归次数不能太多。否则也会发生栈内存溢出。
 *  -构造方法,禁止递归
 *
 * 递归的使用前提
 *  当调用方法的时候，方法的主体不变，每次调用方法的参数不同，可以使用递归
 */
public class Demo01 {
    public static void main(String[] args) {
        //a();
        b(1);
    }

    /*
    构造方法禁止递归
        编译报错构造方法是创建对象使用的，一直递归会导致内存中有无数个对象，直接编译报错
     */
    public Demo01(){
        //Demo01();
    }

    //在递归中虽然有限定条件，但是递归次数不能太多。否则也会发生栈内存溢出。
    private static void b(int a) {
        System.out.println(a);
        if (a == 19999) {
            return;//结束方法
        }
        b(++a);
    }

    //递归一定要有条件限定，保证递归能够停止下来，否则会发生栈内存溢出。
    private static void a() {
        System.out.println("调用a方法");
        a();
    }


    
}
