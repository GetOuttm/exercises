<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:task="http://www.springframework.org/schema/task" xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/data/jpa
		http://www.springframework.org/schema/data/jpa/spring-jpa.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <!--spring和springdatajpa配置-->

    <!--1.创建EntityManagerFactory对象交给spring容器管理-->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <!--数据库连接池-->
        <property name="dataSource" ref="dataSource"></property>
        <!--在创建spring容器时自动扫描packagesToScan下包下的所有实体类-->
        <property name="packagesToScan" value="org.onetomany.entity"></property>
        <!--jpa的实现厂家-->
        <property name="persistenceProvider" >
            <bean class="org.hibernate.jpa.HibernatePersistenceProvider"></bean>
        </property>

        <!--jpa的提供者适配器-->
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <!--配置是否自动创建数据库表-->
                <property name="generateDdl" value="false" />
               <!-- 指定数据库类型-->
                <property name="database" value="MYSQL" />
                <!--数据库方言  支持的特有语法-->
                <property name="databasePlatform" value="org.hibernate.dialect.MySQL57Dialect" />
                <!--是否显示sql语句-->
                <property name="showSql" value="true" />
            </bean>
        </property>
        <!--jpa的方言  高级的特性-->
        <property name="jpaDialect">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect" />
        </property>

        <!--注入jpa配置信息
            加载jpa的基本配置信息和jpa实现方式(hibernate)的配置信息
                hibernate.hbm2ddl.auto:自动创建数据库表
                    create   每次都会创建数据库表
                    update   有表不创建，没有则创建
        -->
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
            </props>
        </property>
    </bean>


    <!-- 利用Spring读取Properties文件  location：位置，定位，这里是文件位置 -->
    <util:properties id="jdbc" location="classpath:jdbcConfig.properties"></util:properties>
    <!--创建数据库连接池-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="#{jdbc.driver}"></property>
        <property name="jdbcUrl" value="#{jdbc.url}"></property>
        <property name="user" value="#{jdbc.user}"></property>
        <property name="password" value="#{jdbc.password}"></property>
    </bean>

    <!--配置事务管理器-->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"></property>
    </bean>

    <!-- 整合spring data jpa
        base-package对此包下的所有接口进行动态代理增强
    -->
    <jpa:repositories base-package="org.onetomany.dao" transaction-manager-ref="transactionManager"
            entity-manager-factory-ref="entityManagerFactory"></jpa:repositories>



    <!--配置包扫描-->
    <context:component-scan base-package="org.onetomany"></context:component-scan>
</beans>